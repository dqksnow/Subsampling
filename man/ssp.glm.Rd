% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/general_glm_main_function.R
\name{ssp.glm}
\alias{ssp.glm}
\title{Optimal Subsampling Methods for Generalized Linear Models}
\usage{
ssp.glm(
  formula,
  data,
  subset = NULL,
  n.plt,
  n.ssp,
  family = "binomial",
  criterion = "optL",
  sampling.method = "poisson",
  likelihood = "weighted",
  control = list(...),
  contrasts = NULL,
  ...
)
}
\arguments{
\item{formula}{An object of class "formula" which describes the model to be
fitted.}

\item{data}{A data frame containing the variables in the model. Usually it
contains a response vector and a design matrix.
The binary response vector that takes the value of 0 or 1, where 1 means
the event occurred.
The design matrix contains predictor variables. A column representing
the intercept term with all 1's will be automatically added.}

\item{subset}{An optional vector specifying a subset of rows to be used}

\item{n.plt}{The pilot subsample size (the first-step subsample size).
These samples will be used to estimate the pilot estimator as well as to
estimate the optimal sampling probability.}

\item{n.ssp}{The expected optimal subsample size (the second-step subsample
size).}

\item{family}{defalut = 'binomial'.}

\item{criterion}{The criterion of optimal subsampling probabilities,
currently there are three choices \code{optA}, \code{optL}, and \code{LCC}.}

\item{sampling.method}{The sampling method for drawing the optimal subsample,
currently there are two choices \code{withReplacement} and \code{poisson}.}

\item{likelihood}{The type of the maximum likelihood function used to
calculate the optimal subsampling estimator, currently there are two choices
\code{weighted} and \code{logOddsCorrection}.}

\item{control}{a list of parameters for controlling the sampling process.}

\item{contrasts}{an optional list. It specifies how categorical variables are represented in the design matrix. For example, contrasts = list(v1 = 'contr.treatment', v2 = 'contr.sum')}

\item{...}{a list of parameters for controlling the fitting process which
will be passed to glm().}
}
\value{
\describe{
\item{beta.plt}{pilot estimator}
\item{beta.ssp}{optimal subsample estimator}
\item{beta.cmb}{combined estimator of \code{beta.plt} and \code{beta.ssp}}
\item{var.ssp}{covariance matrix of \code{beta.ssp}}
\item{var.cmb}{covariance matrix of \code{beta.cmb}}
\item{index.plt}{index of pilot subsample}
\item{index.ssp}{index of optimal subsample}
}
}
\description{
Optimal Subsampling Methods for Generalized Linear Models
}
\details{
Additional details... briefly introduce the idea.
}
\examples{
# logistic regression
set.seed(2)
N <- 1e4
beta0 <- rep(-0.5, 7)
d <- length(beta0) - 1
X <- matrix(0, N, d)
generate_rexp <- function(x) x <- rexp(N, rate = 2)
X <- apply(X, 2, generate_rexp)
Y <- rbinom(N, 1, 1 - 1 / (1 + exp(beta0[1] + X \%*\% beta0[-1])))
data <- as.data.frame(cbind(Y, X))
formula <- Y ~ .
n.plt <- 500
n.ssp <- 1000
subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'binomial',
criterion = "optL",
sampling.method = 'poisson',
likelihood = "logOddsCorrection")
summary(subsampling.results)
subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'binomial', 
criterion = "optL",
sampling.method = 'withReplacement', 
likelihood = "weighted",
contrasts = list(F1 = 'contr.sum'))
summary(subsampling.results)
Uni.subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'binomial', 
criterion = 'uniform')
summary(Uni.subsampling.results)
############################################################################
# poisson regression
set.seed(1)
N <-  1e4
beta0 <- rep(0.5, 7)
d <- length(beta0) - 1
X <- matrix(runif(N * d), N, d)
epsilon <- runif(N)
lambda <- exp(beta0[1] + X \%*\% beta0[-1])
Y <- rpois(N, lambda)
data <- as.data.frame(cbind(Y, X))
formula <- Y ~ .
n.plt <- 200
n.ssp <- 600
subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'poisson',
criterion = "optL", 
sampling.method = 'poisson',
likelihood = "weighted")
summary(subsampling.results)
subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'poisson', 
criterion = "optL", 
sampling.method = 'withReplacement',
likelihood = "weighted")
summary(subsampling.results)
Uni.subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'poisson', 
criterion = 'uniform')
summary(Uni.subsampling.results)
############################################################################
# gamma regression
set.seed(1)
N <- 1e4
p <- 3
beta0 <- rep(0.5, p + 1)
d <- length(beta0) - 1
shape <- 2
X <- matrix(runif(N * d), N, d)
link_function <- function(X, beta0) 1 / (beta0[1] + X \%*\% beta0[-1])
scale <- link_function(X, beta0) / shape
Y <- rgamma(N, shape = shape, scale = scale)
data <- as.data.frame(cbind(Y, X))
formula <- Y ~ .
n.plt <- 200
n.ssp <- 1000
subsampling.results <- ssp.glm(formula = formula, 
data = data, 
n.plt = n.plt,
n.ssp = n.ssp,
family = 'gamma',
criterion = "optL", 
sampling.method = 'poisson',
likelihood = "weighted")
summary(subsampling.results)
}
